<?php/** * @see Beausy_Service_Paypal_Data_Response_Abstract */require_once 'Beausy/Service/Paypal/Data/Response/Abstract.php';/** * * Beausy * * @author    Beau Hastings <beausy@gmail.com> * @copyright Beau Hastings * @license   GNU GPL version 2 {@link http://www.gnu.org/licenses/gpl-2.0.html} * */class Beausy_Service_Paypal_Data_Response_PaymentInformation extends Beausy_Service_Paypal_Data_Response_Abstract{  /**   * Unique transaction ID of the payment.   * @var string   */  private $_transactionId;  /**   * The type of transaction   * @var string   */  private $_transactionType;  /**   * Indicates whether the payment is instant or delayed   * @var string   */  private $_paymentType;  /**   * Time/date stamp of payment   * @var string   */  private $_orderTime;  /**   * The final amount charged, including any shipping and taxes from your Merchant Profile   * @var string   */  private $_amount;  /**   * A three-character currency code. Default: USD   * @var string   */  private $_currencyCode = 'USD';  /**   * PayPal fee amount charged for the transaction   * @var string   */  private $_feeAmount;  /**   * Amount deposited in your PayPal account after a currency conversion.   * @var string   */  private $_settleAmount;  /**   * Tax charged on the transaction   * @var string   */  private $_taxAmount;  /**   * Exchange rate if a currency conversion occurred. Relevant only if your are billing in their non-primary currency   * @var string   */  private $_exchangeRate;  /**   * The status of the payment   * @var string   */  private $_paymentStatus;  /**   * The reason the payment is pending   * @var string   */  private $_pendingReason;  /**   * The reason for a reversal if TransactionType is reversal   * @var string   */  private $_reasonCode;  /**   *   *   * This field is available since version 71.0 and is returned only if PAYMENTINFO_n_PAYMENTSTATUS is Completed-Funds-Held..   * Is one of the following values   * @var string   */  private $_holdDecision;  /**   * Prior to version 64.4, the kind of seller protection in force for the transaction, which is one of the following values   * @var string   */  private $_protectionEligibility;  /**   * Since version 64.4, the kind of seller protection in force for the transaction, which is one of the following values   * @var string   */  private $_protectionEligibilityType;  /**   * The eBay transaction identification number   * @var string   */  private $_ebayItemAuctionTransactionId;  /**   * The unique identifier of the specific payment request   * @var string   */  private $_paymentRequestId;  /**   * Filter ID, including the filter type, (PENDING, REPORT, or DENY), the filter ID, and the entry number, m, starting from 0   * @var string   */  private $_fmfFilterIds;  /**   * Filter name, including the filter type, (PENDING, REPORT, or DENY), the filter NAME, and the entry number, m, starting from 0   * @var string   */  private $_fmfFilterNames;  /**   * Set Unique transaction ID of the payment   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setTransactionId($value)  {    $this->_transactionId = $value;    return $this;  }  /**   * Retrieve Unique transaction ID of the payment   *   * @return string   */  public function getTransactionId()  {    return $this->_transactionId;  }  /**   * Set type of transaction   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setTransactionType($value)  {    $this->_transactionType = $value;    return $this;  }  /**   * Retrieve type of transaction   *   * @return string   */  public function getTransactionType()  {    return $this->_transactionType;  }  /**   * Set whether the payment is instant or delayed   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setPaymentType($value)  {    $this->_paymentType = $value;    return $this;  }  /**   * Retrieve whether the payment is instant or delayed   *   * @return string   */  public function getPaymentType()  {    return $this->_paymentType;  }  /**   * Set Time/date stamp of payment   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setOrderTime($value)  {    $this->_orderTime = $value;    return $this;  }  /**   * Retrieve Time/date stamp of payment   *   * @return string   */  public function getOrderTime()  {    return $this->_orderTime;  }  /**   * Set final amount charged   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setAmount($value)  {    $this->_amount = $value;    return $this;  }  /**   * Retrieve final amount charged   *   * @return string   */  public function getAmount()  {    return $this->_amount;  }  /**   * Set three-character currency code   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setCurrencyCode($value)  {    $this->_currencyCode = $value;    return $this;  }  /**   * Retrieve three-character currency code   *   * @return string   */  public function getCurrencyCode()  {    return $this->_currencyCode;  }  /**   * Set PayPal fee amount charged for the transaction   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setFeeAmount($value)  {    $this->_feeAmount = $value;    return $this;  }  /**   * Retrieve PayPal fee amount charged for the transaction   *   * @return string   */  public function getFeeAmount()  {    return $this->_feeAmount;  }  /**   * Set Amount deposited in your PayPal account after a currency conversion   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setSettleAmount($value)  {    $this->_settleAmount = $value;    return $this;  }  /**   * Retrieve Amount deposited in your PayPal account after a currency conversion   *   * @return string   */  public function getSettleAmount()  {    return $this->_settleAmount;  }  /**   * Set Tax charged on the transaction   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setTaxAmount($value)  {    $this->_taxAmount = $value;    return $this;  }  /**   * Retrieve Tax charged on the transaction   *   * @return string   */  public function getTaxAmount()  {    return $this->_taxAmount;  }  /**   * Set Exchange rate if a currency conversion occurred   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setExchangeRate($value)  {    $this->_exchangeRate = $value;    return $this;  }  /**   * Retrieve Exchange rate if a currency conversion occurred   *   * @return string   */  public function getExchangeRate()  {    return $this->_exchangeRate;  }  /**   * Set status of the payment   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setPaymentStatus($value)  {    $this->_paymentStatus = $value;    return $this;  }  /**   * Retrieve status of the payment   *   * @return string   */  public function getPaymentStatus()  {    return $this->_paymentStatus;  }  /**   * Set reason the payment is pending   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setPendingReason($value)  {    $this->_pendingReason = $value;    return $this;  }  /**   * Retrieve reason the payment is pending   *   * @return string   */  public function getPendingReason()  {    return $this->_pendingReason;  }  /**   * Set reason for a reversal   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setReasonCode($value)  {    $this->_reasonCode = $value;    return $this;  }  /**   * Retrieve reason for a reversal   *   * @return string   */  public function getReasonCode()  {    return $this->_reasonCode;  }  /**   * Set   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setHoldDecision($value)  {    $this->_holdDecision = $value;    return $this;  }  /**   * Retrieve   *   * @return string   */  public function getHoldDecision()  {    return $this->_holdDecision;  }  /**   * Set   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setProtectionEligibility($value)  {    $this->_protectionEligibility = $value;    return $this;  }  /**   * Retrieve   *   * @return string   */  public function getProtectionEligibility()  {    return $this->_protectionEligibility;  }  /**   * Set   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setProtectionEligibilityType($value)  {    $this->_protectionEligibilityType = $value;    return $this;  }  /**   * Retrieve   *   * @return string   */  public function getProtectionEligibilityType()  {    return $this->_protectionEligibilityType;  }  /**   * Set eBay transaction identification number   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setEbayItemAuctionTransactionId($value)  {    $this->_ebayItemAuctionTransactionId = $value;    return $this;  }  /**   * Retrieve eBay transaction identification number   *   * @return string   */  public function getEbayItemAuctionTransactionId()  {    return $this->_ebayItemAuctionTransactionId;  }  /**   * Set unique identifier of the specific payment reques   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setPaymentRequestId($value)  {    $this->_paymentRequestId = $value;    return $this;  }  /**   * Retrieve unique identifier of the specific payment reques   *   * @return string   */  public function getPaymentRequestId()  {    return $this->_paymentRequestId;  }  /**   * Set Filter ID   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setFmfFilterIds($value)  {    $this->_fmfFilterIds = $value;    return $this;  }  /**   * Retrieve Filter ID   *   * @return string   */  public function getFmfFilterIds()  {    return $this->_fmfFilterIds;  }  /**   * Set Filter name   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_Response_DoExpressCheckoutPayment   */  public function setFmfFilterNames($value)  {    $this->_fmfFilterNames = $value;    return $this;  }  /**   * Retrieve Filter name   *   * @return string   */  public function getFmfFilterNames()  {    return $this->_fmfFilterNames;  }}