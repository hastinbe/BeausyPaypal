<?php/** * @see Beausy_Service_Paypal_Data_Abstract */require_once 'Beausy/Service/Paypal/Data/Abstract.php';/** * * Beausy * * @author    Beau Hastings <beausy@gmail.com> * @copyright Beau Hastings * @license   GNU GPL version 2 {@link http://www.gnu.org/licenses/gpl-2.0.html} * */class Beausy_Service_Paypal_Data_EbayItemPaymentDetailsItemType extends Beausy_Service_Paypal_Data_Abstract{  /**   * Payment number or index   * @var integer   */  private $_paymentIndex = 0;  /**   * Item index   * @var integer   */  private $_itemIndex = 0;  /**   * Auction item number   * @var string   */  private $_ebayItemNumber;  /**   * Auction transaction identification number   * @var string   */  private $_ebayItemAuctionTransactionId;  /**   * Auction order identification number   * @var string   */  private $_ebayItemOrderId;  /**   * The unique identifier provided by eBay for this order from the buyer   * @var string   */  private $_ebayCartId;  /**   * Set item index   *   * @param   int  $value   * @return  Beausy_Service_Paypal_Data_EbayItemPaymentDetailsItemType   */  public function setPaymentIndex($value)  {    $value = (int) $value;    $this->_paymentIndex = $value;    return $this;  }  /**   * Retrieve item index   * @return int   */  public function setPaymentIndex()  {    return $this->_paymentIndex;  }  /**   * Set item index   *   * @param   int  $value   * @return  Beausy_Service_Paypal_Data_EbayItemPaymentDetailsItemType   */  public function setItemIndex($value)  {    $value = (int) $value;    $this->_itemIndex = $value;    return $this;  }  /**   * Retrieve item index   * @return string   */  public function getItemIndex()  {    return $this->_itemIndex;  }  /**   * Set Auction item number   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_EbayItemPaymentDetailsItemType   */  public function setEbayItemNumber($value)  {    $this->_ebayItemNumber = $value;    return $this;  }  /**   * Retrieve Auction item number   * @return string   */  public function getEbayItemNumber()  {    return $this->_ebayItemNumber;  }  /**   * Set Auction transaction identification number   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_EbayItemPaymentDetailsItemType   */  public function setEbayItemAuctionTransactionId($value)  {    $this->_ebayItemAuctionTransactionId = $value;    return $this;  }  /**   * Retrieve Auction transaction identification number   * @return string   */  public function getEbayItemAuctionTransactionId()  {    return $this->_ebayItemAuctionTransactionId;  }  /**   * Set Auction order identification number   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_EbayItemPaymentDetailsItemType   */  public function setEbayItemOrderId($value)  {    $this->_ebayItemOrderId = $value;    return $this;  }  /**   * Retrieve Auction order identification number   * @return string   */  public function getEbayItemOrderId()  {    return $this->_ebayItemOrderId;  }  /**   * Set unique identifier provided by eBay for this order from the buyer   *   * @param   string  $value   * @return  Beausy_Service_Paypal_Data_EbayItemPaymentDetailsItemType   */  public function setEbayCartId($value)  {    $this->_ebayCartId = $value;    return $this;  }  /**   * Retrieve unique identifier provided by eBay for this order from the buyer   * @return string   */  public function getEbayCartId()  {    return $this->_ebayCartId;  }  /**   * Returns this class as an array   *   * @return array   */  public function toArray()  {    $array = array();    // Optional fields (key=PayPal field name, value=internal variable name)    $optional = array(      array('prefix' => 'L_PAYMENTREQUEST', 'suffix' => 'EBAYITEMNUMBER',       'variable' => '_ebayItemNumber'),      array('prefix' => 'L_PAYMENTREQUEST', 'suffix' => 'EBAYITEMAUCTIONTXNID', 'variable' => '_ebayItemAuctionTransactionId'),      array('prefix' => 'L_PAYMENTREQUEST', 'suffix' => 'EBAYITEMORDERID',      'variable' => '_ebayItemOrderId'),      array('prefix' => 'L_PAYMENTREQUEST', 'suffix' => 'EBAYCARTID',           'variable' => '_ebayCartId'),    );    // Apply optional options and append item index number to each key as required by the PayPal API    foreach($optional as $option)      if (isset($this->$option['variable']))        $array[$option['prefix'] . $this->_paymentIndex . $option['suffix'] . $this->_itemIndex] = $this->$option['variable'];    return $array;  }}